#
# Deploy a Python Host bot and a Python Skill bot and run functional tests. (No build stage.)
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

variables:
  BotGroup: '$(BotName)-RG'
  BuildConfiguration: 'Debug'
  BuildPlatform: 'any cpu'
  # AzureDeploymentPassword: define in Azure
  # AzureDeploymentUser: define in Azure
  # AzureSubscription: define in Azure
  # BotBuilderPackageVersionHost: (optional) define in Azure
  # BotBuilderPackageVersionSkill: (optional) define in Azure
  # DeleteResourceGroup: (optional) define in Azure
  # ExecutePipelinesPersonalAccessToken: (optional) define in Azure
  # NextBuild: define in Azure and set to either a build name or an empty string
  # PyPyHostAppId: define in Azure
  # PyPyHostAppSecret: define in Azure
  # PyPyHostBotName: define in Azure
  # PyPySkillAppId: define in Azure
  # PyPySkillAppSecret: define in Azure
  # PyPySkillBotName: define in Azure
  # RegistryUrlHost: (optional) define in Azure
  # RegistryUrlSkill: (optional) define in Azure
  # TestFilter: (optional) define in Azure. Example: '&TestCategory!=SkipForV3Bots'

pool:
  vmImage: 'windows-2019'

- stage: Prepare
  jobs:
    - job: Delete_Preexisting_Resources
      variables:
        HostBotName: $(PyPyHostBotName)
        SkillBotName: $(PyPySkillBotName)
      steps:
      - template: cleanResourcesStep.yml

- stage: Deploy
  dependsOn: Prepare  
  jobs:
    - job: Deploy_Host
      variables:
        HostBotName: $(PyPyHostBotName)
        SkillBotName: $(PyPySkillBotName)
        SkillAppId: $(PyPySkillAppId)
        BotName: $(PyPyHostBotName)
        DeployAppId: $(PyPyHostAppId)
        DeployAppSecret: $(PyPyHostAppSecret)
        Registry: $[variables.RegistryUrlHost]
        BotBuilderPackageVersion: $[variables.BotBuilderPackageVersionHost]
        Parameters.sourceLocation: 'SkillsFunctionalTests/python/host'
        TemplateLocation: 'SkillsFunctionalTests/python/host/deploymentTemplates/template-with-preexisting-rg.json'
        #TemplateLocation: 'SkillsFunctionalTests/python/host/deploymentTemplates/template-with-new-rg.json'
      steps:
      - template: pythonSetConfigFileSteps.yml
      - template: pythonDeployStepsExistingRG.yml
      #- template: pythonDeployStepsNewRG.yml

    - job: Deploy_Skill
      #dependsOn: Deploy_Host
      variables:
        BotName: $(PyPySkillBotName)
        DeployAppId: $(PyPySkillAppId)
        DeployAppSecret: $(PyPySkillAppSecret)
        Registry: $[variables.RegistryUrlSkill]
        BotBuilderPackageVersion: $[variables.BotBuilderPackageVersionSkill]
        Parameters.sourceLocation: 'SkillsFunctionalTests/python/skill'
        TemplateLocation: 'SkillsFunctionalTests/python/host/deploymentTemplates/template-with-preexisting-rg.json'
        # template-with-new-rg.json errors when run simultaneously in two deploys with 'Azure Error: DeploymentActive'.
        #TemplateLocation: 'SkillsFunctionalTests/python/skill/deploymentTemplates/template-with-new-rg.json'
      steps:
      - template: pythonDeployStepsExistingRG.yml
      #- template: pythonDeployStepsNewRG.yml

    - job: Configure_OAuth
      dependsOn: Deploy_Skill
      steps:
      - task: AzureCLI@1
        displayName: 'Configure skill OAuth connection'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az bot show -g "$(PyPySkillBotName)-RG" -n "$(PyPySkillBotName)"
           call az bot authsetting create -g "$(PyPySkillBotName)-RG" -n "$(PyPySkillBotName)" -c TestOAuthProvider --client-id "$(PyPySkillAppId)" --client-secret '$(PyPySkillAppSecret)'' --service "oauth2" --provider-scope-string '""' --parameters authorizationUrl=https://webjobs.botframework.com/api/testauthprovider/authorize tokenUrl=https://webjobs.botframework.com/api/testauthprovider/token refreshUrl=https://webjobs.botframework.com/api/testauthprovider/refresh clientId="$(PyPySkillAppId)" clientSecret="$(PyPySkillAppSecret)"
        condition: always()

- stage: Test
  dependsOn: Deploy
  jobs:
    - job: Run_Functional_Test
      variables:
        HostBotName: $(PyPyHostBotName)
        Parameters.project: 'SkillsFunctionalTests/tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
        Parameters.solution: 'SkillsFunctionalTests/tests/SkillFunctionalTests.sln'
        DefaultTestFilter: ''
        DotNetTestFilter: $[ coalesce( variables['TestFilter'], variables['DefaultTestFilter'] ) ]
      steps:
      - template: functionalTestSteps.yml

- stage: Cleanup
  dependsOn:
  - Deploy
  - Test
  condition: and(always(), in(variables['TriggeredReason'], 'Schedule', 'Manual', 'BuildRunner'))
  jobs:
    - job: Delete_RG
      steps:
      - task: AzureCLI@1
        displayName: 'Delete Resource Group'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az group delete -n "$(PyPyHostBotName)-RG" --yes
           call az group delete -n "$(PyPySkillBotName)-RG" --yes
        condition: and(always(), ne(variables['DeleteResourceGroup'], 'false'))