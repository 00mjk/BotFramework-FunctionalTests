pool:
  vmImage: 'windows-2019'

variables:
  TriggeredReason: $[ coalesce( variables['TriggeringBuildReason'], variables['Build.Reason'] ) ]
  # NextBuild: define in Azure
  # ExecutePipelinesPersonalAccessToken: define in Azure
  # TriggeredBy: define in Azure and set to an empty string

steps:
- task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
  displayName: 'Tag Build with Build.Reason=$(Build.Reason) NextBuild=$(NextBuild)'
  inputs:
    tags: |
      TriggeredReason=$(TriggeredReason)
      $(TriggeredBy)
      NextBuild=$(NextBuild)
  continueOnError: true
  condition: always()

- task: benjhuser.tfs-extensions-build-tasks.trigger-build-task.TriggerBuild@3
  displayName: 'Trigger build $(NextBuild)'
  inputs:
    buildDefinition: '$(NextBuild)'
    queueBuildForUserThatTriggeredBuild: true
          buildParameters: 'TriggeringBuildReason: $(TriggeredReason), TriggeredBy: Triggered_by_$(Build.DefinitionName)/$(Build.BuildNumber)'
    password: '$(ExecutePipelinesPersonalAccessToken)'
    enableBuildInQueueCondition: true
    blockingBuildsList: '$(NextBuild)'
  continueOnError: true
        condition: and(succeededOrFailed(), ne(variables['TriggeredReason'], 'xyxyxy'), ne(variables['NextBuild'], ''), ne(variables['ExecutePipelinesPersonalAccessToken'], ''))
